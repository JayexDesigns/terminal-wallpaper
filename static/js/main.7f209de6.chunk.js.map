{"version":3,"sources":["components/Command.js","functions/sleep.js","data/Files.js","data/Commands.js","App.js","functions/CommandHandler.js","functions/InputHandler.js","index.js"],"names":["Command","props","command","content","type","className","split","map","letter","index","sleep","ms","Promise","resolve","setTimeout","Files","name","checkScript","this","startsWith","executeScript","setHistory","i","prevHistory","Date","getDay","date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","Commands","executeCommand","checkCommand","length","substring","App","useState","history","setCommand","running","setRunning","useEffect","undefined","CommandList","then","CommandHandler","id","onKeyDown","e","key","com","trim","substr","InputHandler","tabIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f209de6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Command(props) {\r\n    let command = {\r\n        content: props.content,\r\n        type: props.type,\r\n    }\r\n    if (command.type === \"command\") command.content = `> ${command.content}`;\r\n\r\n    return (\r\n        <div className=\"TerminalElement\">\r\n            {command.content.split(\"\").map((letter, index) => {\r\n                if (letter === \" \") return <span className=\"Space\" key={index}></span>\r\n                else return <p key={index} className={(() => {\r\n                    switch (command.type) {\r\n                        case \"command\":\r\n                            return \"text-c\";\r\n                        case \"text\":\r\n                            return \"text-c\";\r\n                        case \"success\":\r\n                            return \"success-c\";\r\n                        case \"info\":\r\n                            return \"info-c\";\r\n                        case \"warning\":\r\n                            return \"warning-c\";\r\n                        case \"error\":\r\n                            return \"error-c\";\r\n                        default:\r\n                            return \"text-c\";\r\n                    }\r\n                })()}>{letter}</p>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Command;\r\n","export default function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n};","import sleep from '../functions/sleep';\r\n\r\nvar Files = [\r\n    {\r\n        name: \"infinite_download.sh\",\r\n        checkScript(command) {\r\n            return (command.content === `./${this.name}` || command.content.startsWith(`./${this.name} `));\r\n        },\r\n        async executeScript(command, setHistory) {\r\n            for (let i = 0; i < 10; ++i) {\r\n                setHistory(prevHistory => [...prevHistory, {content: \"downloading python3...\", type: \"text\"}]);\r\n                await sleep(3000);\r\n                setHistory(prevHistory => [...prevHistory, {content: \"download complete\", type: \"success\"}]);\r\n                await sleep(500);\r\n            }\r\n        },\r\n    },\r\n    {\r\n        name: \"is_it_wednesday.sh\",\r\n        checkScript(command) {\r\n            return (command.content === `./${this.name}` || command.content.startsWith(`./${this.name} `));\r\n        },\r\n        async executeScript(command, setHistory) {\r\n            setHistory(prevHistory => [...prevHistory, {content: ((new Date()).getDay() === 3) ? \"yes\" : \"no\", type: \"text\"}]);\r\n        },\r\n    },\r\n    {\r\n        name: \"time.sh\",\r\n        checkScript(command) {\r\n            return (command.content === `./${this.name}` || command.content.startsWith(`./${this.name} `));\r\n        },\r\n        async executeScript(command, setHistory) {\r\n            let date = new Date();\r\n            let day = (date.getDate() < 10) ? `0${date.getDate()}` : `${date.getDate()}`;\r\n            let month = (date.getMonth() < 10) ? `0${date.getMonth()+1}` : `${date.getMonth()+1}`;\r\n            let year = `${date.getFullYear()}`;\r\n            let hour = (date.getHours() < 10) ? `0${date.getHours()}` : `${date.getHours()}`;\r\n            let minute = (date.getMinutes() < 10) ? `0${date.getMinutes()}` : `${date.getMinutes()}`;\r\n            let second = (date.getSeconds() < 10) ? `0${date.getSeconds()}` : `${date.getSeconds()}`;\r\n            setHistory(prevHistory => [...prevHistory, {content: `${day}/${month}/${year} ${hour}:${minute}:${second}`, type: \"text\"}]);\r\n        },\r\n    }\r\n];\r\n\r\nexport default Files;","import Files from './Files';\r\n\r\nvar Commands = [\r\n    {\r\n        name: \"not found\",\r\n        async executeCommand(command, setHistory) {\r\n            setHistory(prevHistory => [...prevHistory, {content: `command: '${command.content}' not found`, type: 'error'}]);\r\n        },\r\n    },\r\n    {\r\n        name: \"hello world\",\r\n        checkCommand(command) {\r\n            return (command.content === \"hello\" || command.content === \"hi\" || command.content === \"hello world\");\r\n        },\r\n        async executeCommand(command, setHistory) {\r\n            setHistory(prevHistory => [...prevHistory, {content: `hello world!`, type: 'success'}]);\r\n        },\r\n    },\r\n    {\r\n        name: \"help\",\r\n        checkCommand(command) {\r\n            return (command.content === \"help\");\r\n        },\r\n        async executeCommand(command, setHistory) {\r\n            setHistory(prevHistory => [...prevHistory, {content: `v: 0.1.5`, type: 'info'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `this is a simple terminal simulator made with JavaScript and ReactJS, this is still a beta version made by Jayex Designs`, type: 'info'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: ` `, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `available commands:`, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `'hello world'   ->   outputs 'hello world!'`, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `'help'   ->   shows list of commands, scripts and other info`, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `'ls'   ->   shows list of files in the current directory`, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `'clear'   ->   clears the command history`, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `'echo'   ->   show a message on the console`, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: ` `, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `available scripts:`, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `'infinite_download.sh'   ->   a script that simulates update the system infinitely, great as a wallpaper, you can stop it with ctrl + c`, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `'is_it_wednesday.sh'   ->   tells you if it is wednesday`, type: 'text'}]);\r\n            setHistory(prevHistory => [...prevHistory, {content: `'time.sh'   ->   display the actual day and hour`, type: 'text'}]);\r\n        },\r\n    },\r\n    {\r\n        name: \"execute script\",\r\n        checkCommand(command) {\r\n            if (command.content.startsWith(\"./\")) {\r\n                for (let i = 0; i < Files.length; ++i) {\r\n                    if (Files[i].checkScript(command)) return true;\r\n                }\r\n                return false;\r\n            }\r\n        },\r\n        async executeCommand(command, setHistory) {\r\n            for (let i = 0; i < Files.length; ++i) {\r\n                if (Files[i].checkScript(command)) {\r\n                    await Files[i].executeScript(command, setHistory);\r\n                    break;\r\n                };\r\n            }\r\n        },\r\n    },\r\n    {\r\n        name: \"ls\",\r\n        checkCommand(command) {\r\n            return (command.content === \"ls\" || command.content.startsWith(\"ls \"));\r\n        },\r\n        async executeCommand(command, setHistory) {\r\n            for (let i = 0; i < Files.length; ++i) {\r\n                setHistory(prevHistory => [...prevHistory, {content: `'${Files[i].name}'`, type: \"text\"}]);\r\n            }\r\n        },\r\n    },\r\n    {\r\n        name: \"clear\",\r\n        checkCommand(command) {\r\n            return (command.content === \"clear\");\r\n        },\r\n        async executeCommand(command, setHistory) {\r\n            setHistory([]);\r\n        },\r\n    },\r\n    {\r\n        name: \"echo\",\r\n        checkCommand(command) {\r\n            return (command.content === \"echo\" || command.content.startsWith(\"echo \"));\r\n        },\r\n        async executeCommand(command, setHistory) {\r\n            if (command.content === \"echo\") setHistory(prevHistory => [...prevHistory, {content: ` `, type: \"text\"}]);\r\n            else setHistory(prevHistory => [...prevHistory, {content: `${command.content.substring(5, command.content.length)}`, type: \"text\"}]);\r\n        },\r\n    },\r\n];\r\n\r\nexport default Commands;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Command from './components/Command';\nimport InputHandler from './functions/InputHandler';\nimport CommandHandler from './functions/CommandHandler';\n\nfunction App() {\n    const [history, setHistory] = useState([{content: \"help\", type: \"command\"}]);\n    const [command, setCommand] = useState({content: '', type: 'command'});\n    const [running, setRunning] = useState(true);\n\n    useEffect(() => {\n        if (running && history[history.length-1] !== undefined && history[history.length-1].type === \"command\") {\n            CommandHandler(history[history.length-1], setHistory, running, setRunning);\n        }\n    }, [history, running]);\n\n    return (\n        <div id=\"MainContainer\" className=\"background-b\">\n            <div className=\"Terminal\">\n                <div className=\"TerminalSection\" onKeyDown={(e) => InputHandler(\n                    e, command, setCommand, history, setHistory, running, setRunning \n                )} tabIndex=\"0\"></div>\n\n                {(() => {if (!running) {\n                    return <div className=\"TerminalInput TerminalElement\">\n                        <p className=\"primary-c\">[root@pc]$</p>\n                        <span className=\"Space\"></span>\n                        {command.content.split(\"\").map((letter, index) => {\n                            if (letter === \" \") return <span className=\"Space\" key={index}></span>\n                            else return <p key={index} className=\"text-c\">{letter}</p>\n                        })}\n                        <p className=\"TerminalCursor cursor-c\">█</p>\n                    </div>\n                }})()}\n\n                <div className=\"TerminalHistory\">\n                    {history.map((com, index) => {\n                        return <Command content={com.content} type={com.type} key={index} className=\"TerminalElement\"/>;\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import CommandList from '../data/Commands';\r\n\r\nexport default function CommandHandler(command, setHistory, running, setRunning) {\r\n    if (running) {\r\n        for (let i = 1; i < CommandList.length; ++i) {\r\n            if (CommandList[i].checkCommand(command)) {\r\n                CommandList[i].executeCommand(command, setHistory).then(() => {setRunning(false)});\r\n                return;\r\n            }\r\n        }\r\n        CommandList[0].executeCommand(command, setHistory);\r\n        setRunning(false);\r\n        return;\r\n    }\r\n}","export default function inputHandler(e, command, setCommand, history, setHistory, running, setRunning) {\r\n    switch (e.key) {\r\n        case \"Enter\":\r\n            if (!running) {\r\n                let com = command.content;\r\n                com = com.trim();\r\n                if (com !== \"\") {\r\n                    setHistory([...history, {content: com, type: 'command'}]);\r\n                    setRunning(true);\r\n                }\r\n                setCommand({content: '', type: 'command'});\r\n            }\r\n            break;\r\n        case \"Backspace\":\r\n            if (command.length !== 0) setCommand({content: command.content.substr(0, command.content.length-1), type: 'command'});\r\n            break;\r\n        case \"ArrowLeft\":\r\n            break;\r\n        case \"ArrowRight\":\r\n            break;\r\n        case \"ArrowUp\":\r\n            break;\r\n        case \"ArrowDown\":\r\n            break;\r\n        default:\r\n            if (e.key.length === 1) setCommand({content: command.content+e.key, type: 'command'});\r\n            break;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}